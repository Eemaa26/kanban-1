set :application, "kanban"


ssh_options[:forward_agent] = true
# default_run_options[:pty] = true


set :scm, "git"
set :deploy_via, :remote_cache
set :git_shallow_clone, 1
set :git_enable_submodules, 1
set :repository, 'git@github.com:dynamix/kanban.git'


set :user, 'deploy'


set :deploy_to, "/web/#{application}"
role :app, "kanban.server"
role :web, "kanban.server"
role :db,  "kanban.server", :primary => true



namespace :sass do
  desc 'Updates the stylesheets generated by Sass'
  task :update, :roles => :app do
    rails_env = fetch(:rails_env, 'production')
    invoke_command "cd #{latest_release}; RAILS_ENV=#{rails_env} rake sass:update"
  end
end

namespace :deploy do

  before 'deploy:symlink', 'deploy:symlink_shared'
  after "deploy:update_code", "deploy:copy_config_files"  

  desc 'Create sym link to uploads'
  task :symlink_shared, :roles => [:app,:db] do
   run "if [ ! -d #{release_path}/shared ]; then ln -fs #{shared_path} #{release_path}/shared; fi"
  end

   desc "Copy production config files in place"
   task :copy_config_files do
     run("cp -f #{release_path}/config/database.production.yml #{release_path}/config/database.yml")
   end


  # we can not start or stop the server on app-level.. so just do nothing.. 
  desc "start rails apps"
  task :start ,:roles=>:app do
  end
  desc "stop rails apps"
  task :stop,:roles=>:app do
  end
  

  
  
  # we just can restart it via mod_rails/passenger api (e.g. put the trigger-file inplace)
  desc "Restart rails apps"
  task :restart ,:roles=>:app do
    run "touch #{current_path}/tmp/restart.txt"
  end
end